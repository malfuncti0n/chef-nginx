
server {
        listen 443 ssl;
	server_name <%= node['symfony']['vhost'] %>;
        server_tokens off;


        #allow only tlsv1.2
        ssl_protocols <%= node['symfony']['ssl']['versions'] %>;

        #enable ssl
        ssl on;
        ssl_certificate <%= node['symfony']['ssl']['cert_path'] %>/<%= node['symfony']['vhost'] %>/<%= node['symfony']['vhost'] %>.crt;
        ssl_certificate_key <%= node['symfony']['ssl']['cert_path'] %>/<%= node['symfony']['vhost'] %>/<%= node['symfony']['vhost'] %>.key;
	
	#ciphers suit
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

	#ciphers settings
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:50m;
 	ssl_session_timeout 10m;

	#default html
        root <%= node['symfony']['apps_base_dir'] %>/<%= node['symfony']['app_name'] %>/web;

location / {

		# try to serve file directly, fallback to app.php
		try_files $uri /app.php$is_args$args;
	}
	# DEV
	# This rule should only be placed on your development environment
	# In production, don’t include this and don’t deploy app_dev.php or config.php
	location ~ ^/(app_dev|config)\.php(/|$) {

		fastcgi_pass unix:/run/php/php7.0-fpm.sock;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		include fastcgi_params;
		# When you are using symlinks to link the document root to the
		# current version of your application, you should pass the real
		# application path instead of the path to the symlink to PHP
		# FPM.
		# Otherwise, PHP’s OPcache may not properly detect changes to
		# your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
		# for more information).
		fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
		fastcgi_param DOCUMENT_ROOT $realpath_root;
	}
	# PROD
	location ~ ^/app\.php(/|$) {

		fastcgi_pass unix:/run/php/php7.0-fpm.sock;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		include fastcgi_params;
		# When you are using symlinks to link the document root to the
		# current version of your application, you should pass the real
		# application path instead of the path to the symlink to PHP
		# FPM.
		# Otherwise, PHP’s OPcache may not properly detect changes to
		# your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
		# for more information).
		fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
		fastcgi_param DOCUMENT_ROOT $realpath_root;
		# Prevents URIs that include the front controller. This will 404:
		# http://domain.tld/app.php/some-path
		# Remove the internal directive to allow URIs like this
		internal;
	}

	# return 404 for all other php files not matching the front controller
	# this prevents access to other php files you don’t want to be accessible.
	location ~ \.php$ {

		return 404;
	}
}



